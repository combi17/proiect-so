#!/bin/bash

USERS="users.csv"
userID=$(uuidgen)

read -p "Introduceti username-ul: " username
if [[ ! "$username" =~ ^[a-zA-Z0-9_]+$ ]]; then
        echo "Username-ul poate contine doar litere, cifre si underscore fara spatii."
        source signup.bsh
	return
fi

if grep -q "^$username," "$USERS"; then
   echo "Deja exista un cont cu acest username."
   sleep 1 && read -p "Doresti sa te loghezi? (y/n) " option
   if [ "${option,,}" == "y" ]; then #{} si ,, convertesc tot textul la litere mici
        source login.bsh
	return
   else
        echo "Incercati un alt nume de utilizator."
        sleep 1 && source signup.bsh
	return
   fi
fi

checkEmail() {
   read -p "Introduceti email-ul: " email
   if cut -d',' -f2  "$USERS" | grep -qx "$email"; then
	echo "Email-ul este deja folosit pentru un alt cont"
	echo "Incercati din nou cu un alt email"
	sleep 2 && checkEmail
   fi

   if [[ ! "$email" =~ ^[^@]*@[^@]*$ ]] || [[ ! "$email" =~ @.*\..* ]]; then
	echo "Email invalid. Va rog incercati din nou cu un alt email."
	sleep 2 && checkEmail
   fi
}

checkPassword() {
   read -s -p "Introduceti parola: " password
   echo ""
   read -s -p "Introduceti parola din nou: " password2
   echo ""

   if [ "$password" != "$password2" ]; then
	echo "Parolele nu coincid. Va rog incercati din nou"
	sleep 2 && checkPassword
   fi
}

checkEmail
checkPassword

hashedPassword=$(echo -n "$password" | sha256sum | sed 's/ .*//') #sed sterge spatiile albe si ce mai era dupa valoarea hash efectiva
logged_in_users+=("$username")
last_login=$(date '+%Y-%m-%d %H:%M:%S')

echo "$username,$email,$hashedPassword,$userID,$last_login" >> "$USERS"
echo "Contul a fost creat cu username-ul $username si email-ul $email"
echo ""

USER_HOME="./users/$username/home"
mkdir -p "$USER_HOME"
cd "$USER_HOME"

sleep 2 && echo "Acum te afli in directorul $(pwd)"
